@using Services;
@using Model;

@inject ApiService apiService

<div>
    <br />
    <h3>Write a comment</h3>
    <input placeholder="commentText" type="input" id="commentText" @bind-value="commentText" />
    <input placeholder="commentUser" type="input" id="commentUser" @bind-value="commentUser" />
    <button id="createPostButton" type="button" @onclick="CreateNewComment">Post comment</button>
</div>

@code {

    // PostId is passed in from the parent component. See how in PostItem.razor.
    [Parameter]
    public long commentId { get; set; }
    private string? commentText;
    private string? commentUser;
    [Parameter]
    public int postId { get; set; }

    private async void CreateNewComment()
    {
        if (commentText == null)
        {
            return;
        }
        // TODO: Provide list of users from dropdown, or maybe just convert
        // from username to UserId
        await apiService.CreateComment(commentText, commentUser, postId);
        await apiService.GetPost(postId);
    }
}
